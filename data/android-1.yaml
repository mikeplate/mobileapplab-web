title: Activities
description: >
  Overview of the tools and technologies for building native Android applications. Activities and Intents
  as the main engine of showing and starting Android applications.
menu:
- title: Lecture Presentation
  heading: 1. Activities
  type: deck
  shortname: lecture
  description: >
    Slides displayed in the browser. Choose "print" link for a printer-friendly
    page with all slides after one another.
  menu:
  - title: Content
    menu:
    - title: Basic building blocks of an Android Application
    - title: Basic visual components
    - title: Activities and Intents
    - title: Classes and methods introduced in this chapter
      description: >
        Activity, onCreate, TextView, Button, onClick, Intent, startActivity, Toast
  - title: What is Android?
    menu:
    - title: Open source
    - title: Linux kernel
    - title: Optimized for mobile devices
    - title: Uses Java for building applications (1.5)
    - title: Can also run native code in C/C++
    - title: Has its own runtime (not standard Java runtime) - Dalvik
  - title: Android version history
    menu:
    - title: Android versions are named after sweets/pastries
    - title: 1.0 2008 (September)
    - title: 1.5 Cupcake 2009 (April)
    - title: 1.6 Donut 2009 (September)
    - title: 2.1 Eclair 2009 (October)
      description: >
        Live wallpapers. Account Manager.
    - title: 2.2 Froyo 2010 (May)
      description: >
        Store apps on SD card. Cloud to device messaging.
    - title: 2.3 Gingerbread 2010 (December)
      description: >
        Multiple cameras. Gyroscope and more sensors.
    - title: 3.0, 3.1, 3.2 Honeycomb 2011 (February)
      description: >
        Fragments. Action bar. New animation framework. For tablets only.
    - title: 4.0 Ice Cream Sandwich 2011 (October)
      description: >
        GridLayout. Resizable widgets. WiFi Direct.
    - title: 4.1, 4.2 Jelly Bean 2012 (June, November)
      description: >
        Multi-user support. Lock screen widgets. Second display support.
  - title: Create a new project
    menu:
    - title: Choose "File, New, Android Application"
    - title: Application name
      description: >
        The title shown to users when installing, below icon etc. Example: My Test Application
    - title: Project Name
      description: >
        The name of the project folder in Eclipse workspace. Example: MyTest
    - title: Package Name
      description: >
        Unique (reverse) domain name that identifies the application to the platform. Does not have to be
        a registered domain or site. Example: se.mobileapplab.mytest
  - title: Create a new project (2)
    menu:
    - title: Minimum Required SDK
      description: >
        The oldest Android version where the application will install.
    - title: Target SDK
      description: >
        The newest Android version that the developer is aware of and might have optimized for.
    - title: Compile With
      description: >
        Should always be the latest installed Android version to get the most recent tools, compilers etc
        when building the application.
    - title: Theme
      description: >
        Default styles that will be applied to different components in the user interface. Not guaranteed
        on versions older than "Target SDK", since chosen theme might not be available there.
    - title: Use defaults for all other options and dialogs
  - title: Deciding on an Android version
    menu:
    - title: One single application
      menu:
      - title: Can run on many different Android versions
      - title: Can check and adjust itself to take advantage of newer features on newer versions
    - title: Multiple versions of the application
      menu:
      - title: Build separate applications with different "Minimum Required" versions
      - title: Some/much shared code
      - title: Two versions should cover most of the needs for version separation
    - title: If there is a specific feature your application requires in order to function
    - title: If there are features that will enhance your application, but isn't essential
  - title: Files and folders in project
    menu:
    - title: src
      description: >
        Java source files. This is where you will add your code. Organized in subfolders according to
        the different parts of the package name (reverse domain name).
    - title: assets
      description: >
        Optional raw data files that the application might need. Not handled by the platform in any way.
    - title: libs
      description: >
        Extra libraries with code that the application mgith need.
    - title: res
      description: >
        Important resource files in both xml and binary (images) format. These files are handled and
        selected by the platform according to different properties (qualifiers) of the device.
    - title: AndroidManifest.xml
      description: >
        Main configuration of the application. Specifies all activities of the application, some names,
        the icon, permissions and more.
  - title: Important objects in an application
    menu:
    - title: Activity
      description: >
        The basic object of all Android applications. Without an Activity, nothing will be displayed on
        the screen. An application must contain at least one Activity, but can contain more.
    - title: View
      description: >
        The basic visual object when building the user interface. All specific visual components are
        derived from the View. Can be buttons, input fields, formatted text, images etc.
    - title: ViewGroup
      description: >
        A special View that contains other Views layed out on screen according to some rule/specification.
    - title: Intent
      description: >
        Describes an action that should be performed, most often in the form of starting an Activity.
  - title: Resource files
    menu:
    - title: User interface specification
    - title: Text translations
  - title: Your first Activity
    menu:
    - title: Visual appearence - layout
      menu:
      - title: Defined in res/layout/main.xml
      - title: Specifies elements to show in the user interface
    - title: Java Class where your code/logic resides
      menu:
      - title: Stored in src/se.mobileapplab.demo/MainActivity.java
      - title: Contains code that will be called by the platform when events happen
    - title: Separation of layout/code is quite similar to how ASP.NET separates between an aspx-file and a code-behind file
  - title: Layouts in an Activity
    menu:
    - title: RelativeLayout
    - title: LinearLayout
  - title: Views in a layout
    menu:
    - title: TextView
      menu:
      - title: Simple text content
      - title: Equivalent to many HTML elements, like a <div>
    - title: Button
      menu:
      - title: Button that can be pressed
      - title: Equivalent to an HTML element like <input type="button"> or <button>
  - title: Button attributes
  - title: Methods in an Activity class
    menu:
    - title: Some methods have predefined names which makes them into event handlers
    - title: Event handlers are called by the Android platform during the life cycle of an Activity
    - title: onCreate
      description: >
        Event when the application is created for the first time. Initialize all variables here. Read any
        stored data from persistant storage. The onCreate of your first (single?) Activity can be thought of
        as the main method of your whole application.
  - title: Starting another application
  - title: Phone-related intents
  - title: Web-related intents
  - title: Android Permission system
  - title: Toasts

- title: Exercises
  expand: true
  description: Practical tasks to perform and ensure that the basis of the chapter has been understood.
  menu:
  - title: Assignment
    description: >
      The assignment is mandatory for a passing grade in the course.
    menu:
    - title: Message Dispatcher
      description: >
        Create an application for preparing to send sms messages. It shall contain the following.
      menu:
      - title: An EditText element for typing the text of the message
      - title: Three buttons with phone numbers that you choose yourself
      - title: A button named "Add Signature"
      - title: A button named "Send"
      - title: When one of the phone number buttons is pressed, the phone number should be remembered in a Java variable for later use
      - title: A button named "Signature" that adds a predefined signature to whatever currently is stored in the first EditText element (like "Best regards! /John")
      - title: A button named "Send" that starts the sms messaging application with the text in the EditText element to the phone number that was chosen
  - title: Digging deeper
    description: >
      This task is not part of the course. It only serves as a guide for digging deeper into the
      Android platform and will require additional studies on your own.
    menu:
    - title: Clipboard
      description: >
        Reading and writing text from/to the system-wide clipboard in Android is quite easy. There are just
        a few calls that needs to be made. Implement the clipboard in an app of your own choice.
- title: LauncherApp Example
  description: >
    Launch different applications and prepare to call and send messages from within a single list of
    buttons. Demonstrates the basics of an Android application and how to start other applications by using
    Intent objects.

