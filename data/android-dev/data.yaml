title: Data
type: deck
description: >
  Slides about data structures and data storage options in Android apps.
  Choose "print" link for a printer-friendly page with all slides after one another.
menu:
- title: Agenda
  menu:
  - title: Store and manage multiple values
  - title: File handling
- title: SharedPreferences for simple values
  menu:
  - title: Store a single primitive type or a String persistantly
    menu:
    - title: Named collections of values
    - title: Named values
  - title: Write a value
    language: java
    code: |
      String name = "Mike";
      SharedPreferences.Editor storage = 
        getSharedPreferences("mydata", MODE_PRIVATE).edit();
      storage.putString("name", name);
      storage.commit();
  - title: Read a value
    language: java
    code: |
      SharedPreferences storage = getSharedPreferences("mydata");
      String name = storage.getString("name", "");
- title: Static arrays in Java
  menu:
  - title: Arrays are a collection of values of the same type
  - title: Static arrays can't add or remove values
  - title: Declare and initialize a static Array
    language: java
    code: |
      String[] names = new String[] { "Adam", "Betty", "Carl", "Donna" };
      int nameCount = names.length; // The number of items in the array
      names[2] = "Calvin"; // Replace Carl with Calvin
      edit.setText(names[0]); // Show Adam in some EditText view
  - title: Iterate through all values in an Array
    language: java
    code: |
      String welcome = "Welcome to ";
      for (int i = 0; i < names.length; i++) {
        if (i > 0) {
          welcome += ", ";
        }
        welcome += names[i];
      }
- title: Dynamic arrays in Java
  menu:
  - title: Can add and remove values during the array's lifetime
  - title: Declare and add values
    language: java
    code: |
      ArrayList<String> names = new ArrayList<String>();
      names.add("Adam");
      names.add("Betty");
      names.addAll(Arrays.asList("Carl", "Donna"));
  - title: Iterate through all values in an ArrayList
    language: java
    code: |
      String welcome = "Welcome to ";
      for (int i = 0; i < names.size(); i++) {
        if (i > 0) {
          welcome += ", ";
        }
        welcome += names.get(i);
      }
- title: Modify dynamic array
  menu:
  - title: Find and remove a value
    language: java
    code: |
      int found = names.indexOf("Carl");
      if (found>=0) {
        names.remove(found);
      }
- title: Classes in Java
  menu:
  - title: Create your own class with data members
    menu:
    - title: Class must be defined in file with same name
  - title: Project.java
    language: java
    code: |
      public class Project {
        public String name;
        public int hours;
        public Date deadline;
        public Boolean completed;
      }
  - title: Create object and set values
    language: java
    code: |
      Project p = new Project();
      p.name = "Conference Planning";
      p.hours = 16;
      p.deadline = new Date(2014, 5, 1);
      p.completed = false;
- title: Android File System
  menu:
  - title: Private directory
    menu:
    - title: App has private directory for files no other app can see
    - title: No extra permissions required
  - title: External storage
    menu:
    - title: Common directory where all files are shared between apps
    - title: Removable SD card on some devices
    - title: Needs permissions that user accepts when installing
      language: xml
      code: |
        <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
  - title: Storage Access Framework
    menu:
    - title: A more granular approach to sharing files from Android 4.4
- title: File operations
  menu:
  - title: Private directory for app
    language: java
    code: |
      File dir = getFilesDir();
  - title: External storage directory shared by all apps with permissions
    language: java
    code: |
      File dir = new File(Environment.getExternalStorageDirectory();
  - title: List contents of directory and show each name in log
    language: java
    code: |
      File[] files = dir.listFiles();
      for (int i = 0; i < files.length; i++) {
        Log.i("Found a file with name " + files[i].getName());
      }
- title: Object serialization
  menu:
  - title: Store an object and all its members in a file
  - title: Let Java library handle converting object in memory to bytes on disk
  - title: For a class to be serializable
    menu:
    - title: Must implement Serializable interface
    - title: Must have static member for version
  - title: Create your own class
    language: java
    code: |
      class MyData implements Serializable {
          private static final long serialVersionUID = 1L;
          public int id;
          public String name;
          public String country;
      }
- title: Serialize object to file
  menu:
  - title: Open a file for output and write created object(s) to stream
    language: java
    code: |
      try {
        MyData obj = new My Data(); // Then set members!
        FileOutputStream output = openFileOutput("data.bin", MODE_PRIVATE);
        ObjectOutputStream serializer = new ObjectOutputStream(output);
        serializer.writeObject(obj);
        output.close();
      }
      catch (Exception err) {
      }
- title: Read from file
  menu:
  - title: Open previous file for input and read object from stream
    language: java
    code: |
      try {
        FileInputStream input = openFileInput("data.bin");
        ObjectInputStream serializer = new ObjectInputStream(input);
        MyData obj = serializer.readObject();
        input.close();
      }
      catch (Exception err) {
      }

