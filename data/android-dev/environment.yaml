title: Android Development Environment - Lecture
type: deck
description: >
  Overview of the tools and technologies for building native Android applications.
menu:
- title: Agenda
  menu:
  - Android background
  - Install the environment
  - Create your first app in Eclipse
  - Launching and debugging
- title: What is Android?
  menu:
  - title: Open source
    menu:
    - title: https://github.com/android/platform_frameworks_base
    - title: https://code.google.com/p/android/issues/advsearch
  - title: Linux kernel
  - title: Optimized for mobile devices
  - title: Uses Java for building applications (1.5)
  - title: Can also run native code in C/C++
  - title: Has its own runtime (not standard Java runtime) - Dalvik => ART
- title: History
  menu:
  - title: 2003 Android, Inc founded by Andy Rubin and others
  - title: 2005 Google buys Android, Inc
  - title: 2007 Apple launches the iPhone
  - title: 2007 Google announces Android
  - title: 2008 First phone available for purchase (HTC Dream)
  - title: 2010 Apple launches the iPad
  - title: 2011 Android tablet version and big update 4.0
- title: Versions
  menu:
  - title: Android versions has three naming conventions
    menu:
    - title: Named after sweets/pastries in alphabetical order
    - title: Software major/minor versions
    - title: Sequential number = API level
  - title: Most important versions http://developer.android.com/guide/topics/manifest/uses-sdk-element.html#ApiLevels
    table:
    - row:
      - Donut
      - 1.6
      - 4
      - 2009
    - row:
      - Gingerbread
      - 2.3.3
      - 10
      - 2011
    - row:
      - Ice Cream Sandwich
      - 4.0.3
      - 15
      - 2011
    - row:
      - Jelly Bean
      - 4.1
      - 16
      - 2012
    - row:
      - KitKat
      - 4.4
      - 19
      - 2013
    - row:
      - Lollipop
      - 5.0
      - 21
      - 2014
- title: Version Features
  menu:
  - title: 2.1 Eclair, 2.2 Froyo, 2.3 Gingerbread
    menu:
    - title: Live wallpapers. Account Manager.
    - title: Store apps on SD card. Cloud to device messaging.
    - title: Multiple cameras. Gyroscope and more sensors.
  - title: 4.0.3 Ice Cream Sandwich
    menu:
    - title: Fragments. Action bar. New animation framework.
    - title: GridLayout. Resizable widgets. WiFi Direct.
  - title: 4.1+ Jelly Bean
    menu:
    - title: Multi-user support. Lock screen widgets. Second display support.
  - title: 4.4 KitKat
    menu:
    - title: WebViews uses Chromium, Immersive mode, Translucent ActionBar
  - title: 5.0 Lollipop
    menu:
    - title: Material design
- title: Installation
  menu:
  - title: Always start with Java JDK (recommend latest version of Java SE)
  - title: Choose your development environment
    menu:
    - title: Eclipse with ADT plugin, or
    - title: Android Studio
  - title: Eclipse with ADT plugin options
    menu:
    - title: Download bundle from android.com where ADT and Android SDK is included
    - title: Download latest Eclipse from eclipse.org and install ADT and Android SDK manually
  - title: Always finish install with
    menu:
    - title: Start Android SDK Manager to download platform(s)
    - title: Start Android Virtual Device Manager and create a virtual phone for the emulator
- title: Installation problems
  menu:
  - title: No Java found
    menu:
    - title: >
        Create environment variable JAVA_HOME and point to the directory where Java is, and
        add the Java directory + bin to the PATH.
    - title: >
        It's not enough to have JRE (Java Runtime Environment). You need to install the JDK
        (Java Development Kit).
  - title: Incorrect bit-version of Java 32/64
    menu:
    - title: Both Java and Eclipse come in different 32- and 64-bit versions. Don't mix them!
    - title: >
        If you have both 32- and 64-bit Java installed, make sure JAVA_HOME and the PATH
        points to the corrent one (depending on your Eclipse choice).
- title: Tools in the Android SDK
  menu:
  - title: Android SDK Manager
    description: Download platform versions and other components and updates
  - title: Android Virtual Device Manager (AVD)
    description: Create and run virtual phones with different screen sizes and other features where you test your apps
  - title: Android Emulator
    description: Run a virtual phone created with the Virtual Device Manager
  - title: DDMS
    description: Show and investigate the insides of a running phone, physical or virtual
- title: Android SDK Manager
  menu:
  - title: Start
    menu:
    - title: Menu/button in Eclipse
    - title: Run "android sdk" from the command line inside the tools directory of the SDK
    - title: On Windows, you can also start "SDK Manager.exe"
  - title: Default list
    menu:
    - title: Latest version of Android automatically selected
    - title: Accept this and Install
  - title: Extras
    menu:
    - title: Intel x86 Emulation Accelerator (HAXM)
    - title: Android SDK Manager only downloads the install!
    - title: You need to start the install yourself
- title: What's in a platform version?
  menu:
  - title: SDK Platform
    menu:
    - title: Libraries for building Android apps to run on any device
  - title: Google APIs
    menu:
    - title: Libraries for building Android apps with access to Google APIs to run on Google licensed devices
    - title: Specifically Google Maps and the Play Services library
  - title: ARM EABI v7a System Image
    menu:
    - title: A binary for running virtual phones in the emulator, emulating the ARM processor (slow)
  - title: Intel x86 Atom System Image
    description: >
      A binary for running virtual phones in the emulator using native Intel processor (faster). For
      this to work you also need to install the Intel x86 Emulation Accelerator.
- title: Android Virtual Device Manager
  menu:
  - title: Start
    menu:
    - title: Button in Eclipse
    - title: Run "android avd" from the command line inside the tools directory of the SDK
  - title: Create new virtual devices
    menu:
    - title: Choose an Android version for the phone
    - title: Choose an image (ARM or possibly x86 emulation)
    - title: Choose memory and other features
  - title: Start a virtual device in the Android Emulator
    menu:
    - title: Use scaling to fit the emulator on your screen (recommend 8 inch ~ 0.5 scale)
- title: Android Emulator
  menu:
  - title: Very close to a real device
    menu:
    - title: Slow to boot. Ok to use (hopefully). Keep it open!
    - title: Specify "Hardware keyboard" to type using your computer keyboard
    - title: Physical buttons on a physical device will be extra buttons in the Android Emulator window
  - title: Each running emulator has a local tcp port number for control/communication
    menu:
    - title: adb is a command line tool to communicate with the emulator
    - title: Multiple running emulators can "call" each other using the port number
- title: Android Emulator can be slow
  menu:
  - title: Use x86 emulation (not ARM)
    menu:
    - title: A full compile of the Android platform, but for Intel x86 processors
    - title: This will be faster since it means that no ARM processor emulation is necessary
    - title: Requires Intel x86 Emulator Accelerator (HAXM)
    - title: Create virtual phone using Intel x86 image
  - title: Genymotion is an alternative based on Virtual Box
    menu:
    - title: Free version available
    - title: http://www.genymotion.com/
- title: Eclipse
  menu:
  - title: Open source IDE written in Java for developing all kinds of applications, not just Android apps
  - title: For latest version, download from http://eclipse.org
    menu:
    - title: Eclipse for Java Developers is fine
    - title: Install ADT manually
  - title: Or download bundle of Eclipse (older version) and the Android SDK
    menu:
    - title: https://developer.android.com/sdk/index.html
- title: Android Plugin for Eclipse
  menu:
  - title: The ADT (Android Developer Tools) for Eclipse are essential to develop Android apps inside Eclipse
  - title: Manual install
    menu:
    - title: Choose "Help, Install New Software"
    - title: Click Add button to add a new plugin listing (called Repository)
    - title: Set name to whatever you like, for instance "Android"
    - title: Set url to http://dl-ssl.google.com/android/eclipse/
    - title: Click Ok, and then select the Developer Tools with a checkbox and continue with Next until Finish
- title: Tell Eclipse where Android SDK is
  menu:
  - title: After installing the Android Plugin (ADT), restart Eclipse
  - title: Tell Eclipse where the Android SDK is on disk
    menu:
    - title: Eclipse will ask for this location when restarting the first time after the ADT has been installed
    - title: Can also be set/changed inside Eclipse
    - title: Choose "Window, Preferences, Android" and specify "SDK Location"
    - title: The list below "SDK Location" in this dialog box should contain all downloaded Android versions
    - title: >
        This setting is stored as part of your Workspace, so changing to an empty Workspace means this
        might need to be specified again.
- title: Create a new project (1/3)
  menu:
  - title: Choose "File, New, Android Application Project"
  - title: Application name
    description: >
      The title shown to users when installing, below icon etc. Example: My Test Application
  - title: Project Name
    description: >
      The name of the project folder in Eclipse workspace. Example: MyTest
  - title: Package Name
    description: >
      Unique (reverse) domain name that identifies the application to the platform. Does not have to be
      a registered domain or site. Example: se.mobileapplab.mytest
- title: Create a new project (2/3)
  menu:
  - title: Minimum Required SDK
    description: >
      Oldest supported Android version where installable
  - title: Target SDK
    description: >
      The newest Android version that the developer is aware of and might have optimized for
  - title: Compile With
    description: >
      Should always be the latest installed Android version to get the most recent tools/compilers
  - title: Theme
    description: >
      Default styles that will be applied to different components in the user interface
  - title: Use defaults for all other options and dialogs
- title: Create a new project (3/3)
  menu:
  - title: Sufficient to accept the defaults for all other options
  - title: Configure Launcher Icon
    menu:
    - title: Choose Clipart, Choose and possibly change Background Color
  - title: Blank Activity
    menu:
    - title: Will be used for all examples in the course. Other types of activities can be added later.
- title: Eclipse basics
  menu:
  - title: Workspace
    description: >
      A folder on disk that contains projects in subfolders and has a ".metadata" folder with settings
  - title: Project / Package
    description: >
      A package in Java is a collection of one or more classes with the same package name. Usually the
      same as a project, but a project can link to other packages/libraries
  - title: Perspective
    description: >
      The contents of the Eclipse window, optimized for Writing code (Java) or debugging (Debug)
  - title: View
    description: >
      Rectangular area/panel in the perspective with specific content, commands etc. As tabs and
      dockable panels
- title: Essential folders and files
  menu:
  - title: src
    description: >
      Java source files
  - title: res
    description: >
      Important resource files in both xml and binary format. Different subfolders for different
      types of devices using qualifiers
  - title: AndroidManifest.xml
    description: >
      Configuration of the app like title, included activities, permissions etc
- title: Essential app objects
  menu:
  - title: Activity
    description: >
      The basic object of all Android apps. Without an Activity, nothing will be displayed on
      the screen. An app must contain at least one Activity, but can contain more.
  - title: Context
    description: >
      Generalization of the resources and other objects that relates to the application. You will use it
      as an argment in many calls, but you don't need to know anything more about it and you can always
      use the Activity (this) for the course's examples.
- title: Essential visual objects
  menu:
  - title: View
    description: >
      The basic visual object when building the user interface. All specific visual components are
      derived from the View. Can be buttons, input fields, formatted text, images etc.
  - title: ViewGroup (layouts)
    description: >
      A special View that contains other Views layed out on screen according to some rule(s).
      Can be a RelativeLayout, a LinearLayout or some other ViewGroup-derived class.
  - title: Fragment
    description: >
      Also a layout that contains Views, but with added intelligence that makes it behave between
      a ViewGroup and an Activity. Was introduced in Android 4.0.
- title: Eclipse keyboard shortcuts
  menu:
  - title: Ctrl+1
    description: >
      Quick fix. Display menu with options for automatic changes
  - title: Ctrl+Space
    description: >
      Show list of possible members for current object
  - title: Ctrl+O
    description: >
      Navigate inside of current file. Show list of class members
  - title: Ctrl+E
    description: >
      Navigate between opened files. Show list of all opened files (windows)
  - title: Ctrl+W
    description: >
      Close the current file/window.
- title: Building and running in Eclipse
  menu:
  - title: Eclipse is set to build automatically while you are writing code
  - title: Any build errors are shown continuously in the Problems view
    description: >
      Note that some errors are just an effect of you not being completely finished with your code
  - title: Start your app in Debug mode with F11
    menu:
    - title: Will only work when java file is open! (not xml file)
    - title: >
        First time, right click on the project and select "Debug As, Android Application"
    - title: Let Eclipse automatically switch to the Debug Perspective
      menu:
      - title: Switch back when you're done with the "Java" button in the top right corner
- title: Get out of an Eclipse jam
  menu:
  - title: Have you tried turning it off and on again?
    menu:
    - title: File, Restart
  - title: Project, Clean will delete all temporary files
    menu:
    - title: If it claims that an R.id constant doesn't exist, when it does
    - title: When building errors doesn't make sense
  - title: Window, Reset Perspective
    menu:
    - title: If the user interface is behaving strange, panels missing
    - title: If it is complaining that a file doesn't exist, that is clearly there
  - title: Delete ".metadata" folder in workspace
    menu:
    - title: Eclipse settings will be lost - only last resort!
- title: More Eclipse tips
  menu:
  - title: Opened files can come from more than one project
    description: >
      Common to work in more than one project and open multiple files. Since many files in Android have
      the same name across projects, it is quite easy to work on a file in another project than what
      you THINK you are working on.
  - title: Location of Android SDK
    description: >
      If Eclipse have trouble finding the Android SDK, check it under "Window, Preferences, Android, 
      SDK Location". The list below the path must have at least one Android platform version.
- title: Errors while running your app
  menu:
  - title: Run-time errors are called Exceptions
    menu:
    - title: An Exception is thrown by the platform when a run-time error is discovered
  - title: When an Exception occurs
    menu:
    - title: Eclipse will halt at location where exception was thrown
    - title: Eclipse switches to Debug Perspective
      description: >
        Unfortunately not always showing the location in your own code where the error is (depending on what
        kind of exception has occured). Look at least at the type of exception and any additional information
        in the Variables panel of the Debug perspective.
  - title: Set your own breakpoint (stop) by double-click in left margin before code line
- title: Debugging keyboard shortcuts
  menu:
  - title: Step through line-by-line
    menu:
    - title: F5 - Step Into, will show/step inside of your own methods
    - title: F6 - Step Over, will NOT how/step inside of your own methods
    - title: F8 - Resume, run full speed until next breakpoint, end or an exception occurs
- title: Logging
  menu:
  - title: Console View in Eclipse
    menu:
    - title: Commands that Eclipse runs when building and launching
    - title: Make sure to select the Android view (not DDMS)
  - title: LogCat View in Eclipse
    menu:
    - title: Messages from the running Emulator or a connected device
    - title: Verbose, but can be filtered
  - title: Output your own LogCat messages
    description: >
      You can also output your own messages to the LogCat View using Log.i, Log.w and Log.e calls from
      your Java code
- title: Deciding on an Android version
  menu:
  - title: One single application
    menu:
    - title: Can run on many different Android versions
    - title: Can check and adjust itself to take advantage of newer features on newer versions
    - title: If you call a member that does not exist on older version, app will crash
  - title: Multiple versions of the application
    menu:
    - title: Build separate applications with different "Minimum Required" versions
    - title: Some/much shared code
  - title: Statistics of versions in use
    description: >
      http://developer.android.com/about/dashboards/index.html
- title: Common errors
  menu:
  - title: Syntax errors in layout xml file
    description: >
      Typing wrong element or attribute names in the xml file is common and are usually not discovered
      until starting your application. Case sensitive. Note "android:" prefix
  - title: Wrong onClick method
    description: >
      Validity of "android:onClick" is not checked and app crashes if not matched to method in Activity.
      Method must be public void and take View argument
  - title: Forgetting to request a permission
  - title: Forgetting to declare extra Activities in AndroidManifest.xml
- title: The resulting app
  menu:
  - title: Single apk file
    menu:
    - title: Stored in bin subfolder of project
    - title: Standard zip file with compiled Java code, resources etc
  - title: Deploy app to phone (without Eclipse integration)
    menu:
    - title: Transfer to a physical phone via USB and the DDMS tool
    - title: Download from any web site, if allowed in system settings (Unknown Sources)

