title: Styling Presentation
heading: Styling
type: deck
shortname: lecture
description: >
  Slides about changing the appearence of your views by styling them.
  Choose "print" link for a printer-friendly page with all slides after one another.
menu:
- title: Agenda
  menu:
  - title: Common styles for designing views
  - title: Define colors and measurements
  - title: Use collection of styles for identical looks
- title: Styling Views in Android
  menu:
  - title: Somewhat similar to CSS in the HTML world
    menu:
    - title: But not nearly as powerful as CSS is
  - title: Defined by
    menu:
    - title: Android platform has defaults
    - title: Customize with attributes on the XML element
    - title: Collect multiple attributes into a named style
    - title: Apply styles automatically using a theme
- title: Applicable styles
  menu:
  - title: Easy to apply
    menu:
    - title: Widths, heights, sizes
    - title: Paddings, margins, alignment
    - title: Text size, color and shadows
    - title: Backgrounds
  - title: A little bit more work
    menu:
    - title: Gradients
    - title: Rounded corners
  - title: Strange omissions, difficult to apply
    menu:
    - title: Borders
    - title: Box shadows
- title: General View attributes
  menu:
  - title: android:textColor
    description: >
      Color of any text displayed in the view
  - title: android:textSize
    description: >
      Font size of any text displayed in the view
  - title: android:background
    menu:
    - title: Background color for the view
    - title: Can also be an image (Drawable)
- title: Spacing
  menu:
  - title: android:padding
    menu:
    - title: Specified for all edges, or individual as in android:paddingLeft
  - title: android:layout_margin
    menu:
    - title: Specified for all edges, or individual as in android:layout_marginLeft
- title: Units
  menu:
  - title: px
    menu:
    - title: Each unit is equal to one pixel on screen
  - title: dp (or dip)
    menu:
    - title: Each unit is 1/160 of an inch
    - title: Density Independent Pixels
    - title: Scales to different screen sizes and densities
    - title: Recommended for all values except text size
  - title: sp
    menu:
    - title: Same as dp, but with an optional scaling factor applied
    - title: Visually impaired users can increase scaling factor
    - title: Recommended for all text sizes
- title: Colors
  menu:
  - title: Specified in xml attributes as hexadecimal value
    language: xml
    code: |
      <TextView android:textColor="#a05528" />
  - title: Same as in html/css
    menu:
    - title: Red amount from 00 to ff
    - title: Green amount from 00 to ff
    - title: Blue amount from 00 to ff
  - title: Optional alpha/opacity specified as first value
    menu:
    - title: From 00 (fully transparent) to ff (fully opaque)
- title: Alignment for Views
  menu:
  - title: android:gravity
    description: >
      How content inside of the View is aligned horizontally and vertically. Two values can be
      combined with the pipe "|" character.
  - title: android:layout_gravity
    description: >
      How the actual View is aligned horizontally and vertically with regards to its container
      or "available area". Also depends on the type of layout that is used. If the View has
      "match_parent" for its width and/or height, this attribute will not have an effect.
- title: Style the text of the Spinner
  menu:
  - title: Compound views are harder to style
    menu:
    - title: Spinner is a compound view, meaning it actually consists of multiple views
    - title: Attributes on view element have no effect on internal views
    - title: Solution might be a bit different depending on the view
  - title: Spinner item (text) styling by changing the theme in styles.xml
    language: xml
    code: |
      <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <item name="android:spinnerItemStyle">@style/spinner_text_view</item>
      </style>
      <style name="spinner_text_view">
        <item name="android:gravity">center</item>
        <item name="android:textSize">40sp</item>
      </style>
- title: Some styling requires resources or even custom drawing
  menu:
  - title: When the styling attributes are not enough
  - title: Some extra features can be done with resource XML files
    menu:
    - title: Rounded corners
    - title: Gradient colors
  - title: When no built in styling exists
    menu:
    - title: Create your own class derived from View (or other View class)
    - title: Override onDraw method
    - title: Paint whatever you like inside the View's rectangle
    - title: Pixel perfect control
- title: Good design
  menu:
  - title: >
      Important to use the mobile medium to its fullest and create beautiful and useful applications
  - title: >
      Use inspiration and visual design from other platforms, but keep the user interface
      patterns on the platform you are targeting
  - title: Don't be too inventive so users are confused
    menu:
    - title: Follow the Android design guidelines and user interface patterns
    - title: http://developer.android.com/design/index.html
    - title: Then be creative!
  - title: Learn from the source
    menu:
    - title: http://androiddrawables.com/ - binary resources in the Android platform
    - title: http://goo.gl/ALQLh - resource xml in the Android platform from http://grepcode.com/
- title: Design inspiration
  menu:
  - title: http://www.scoutzie.com/android
  - title: http://www.android-app-patterns.com/
  - title: http://androidpttrns.com/
  - title: http://dribbble.com/tags/android
  - title: http://mycolorscreen.com/?os=android
  - title: http://www.droidscreens.com/
  - title: http://androiduiux.com/
  - title: http://androidniceties.tumblr.com/
