title: Styling
type: deck
shortname: lecture
description: >
  Slides about changing the appearence of your views by styling them.
  Choose "print" link for a printer-friendly page with all slides after one another.
menu:
- title: Agenda
  menu:
  - title: Common styles for designing views
  - title: Define colors and measurements
  - title: Use collection of styles for similar looks
- title: Styling Views in Android
  menu:
  - title: Somewhat similar to CSS in the HTML world
    menu:
    - title: But not nearly as powerful as CSS
  - title: Defined by
    menu:
    - title: Android platform has defaults
    - title: Customize with attributes on the XML element
    - title: Collect multiple attributes into a named style
    - title: Apply styles automatically using a theme
- title: Applicable styles
  menu:
  - title: Easy to apply
    menu:
    - title: Widths, heights, sizes
    - title: Paddings, margins, alignment
    - title: Text size, color and shadows
    - title: Backgrounds
  - title: A little bit more work
    menu:
    - title: Gradients
    - title: Rounded corners
  - title: Strange omissions, difficult to apply
    menu:
    - title: Borders
    - title: Box shadows
- title: General View attributes
  menu:
  - title: android:textColor
    description: >
      Color of any text displayed in the view
  - title: android:textSize
    description: >
      Font size of any text displayed in the view
  - title: android:background
    menu:
    - title: Background color for the view
    - title: Can also be an image (Drawable)
- title: Spacing
  menu:
  - title: android:padding
    menu:
    - title: Specified for all edges, or individual as in android:paddingLeft
  - title: android:layout_margin
    menu:
    - title: Specified for all edges, or individual as in android:layout_marginLeft
- title: Units
  menu:
  - title: px
    menu:
    - title: Each unit is equal to one pixel on screen
  - title: dp (or dip)
    menu:
    - title: Each unit is 1/160 of an inch
    - title: Density Independent Pixels
    - title: Scales to different screen sizes and densities
    - title: Recommended for all values except text size
  - title: sp
    menu:
    - title: Same as dp, but with an optional scaling factor applied
    - title: Visually impaired users can increase scaling factor
    - title: Recommended for all text sizes
- title: Colors
  menu:
  - title: Specified in xml attributes as hexadecimal value
    language: xml
    code: |
      <TextView android:textColor="#a05528" />
  - title: Same as in html/css
    menu:
    - title: Red amount from 00 to ff
    - title: Green amount from 00 to ff
    - title: Blue amount from 00 to ff
  - title: Optional alpha/opacity specified as first value
    menu:
    - title: From 00 (fully transparent) to ff (fully opaque)
- title: Styling values in a central place
  menu:
  - title: Apply a single styling value for many Views in many Activities
    menu:
    - title: Color
    - title: Measurement (like textSize, padding)
  - title: Defined in a XML resource file like /res/values/variables.xml
    language: xml
    code: |
      <resources>
        <color name="dark">#339933</color>
        <dimen name="heading">20sp</dimen>
      </resources>
  - title: Reference in any View attribute that can hold that particular value
    language: xml
    code: |
      <TextView android:textColor="@color/dark"
        android:textSize="@dimen/heading"
- title: Collect multiple styling attributes into a single style
  menu:
  - title: Defined in a XML resource file like /res/values/styles.xml
    language: xml
    code: |
      <resources>
        <style name="checker">
          <item name="android:background">#333399</item>
          <item name="android:layout_margin">5dp</item>
        </style>
      </resources>
  - title: Referenced in any View as a single attribute - NO PREFIX
    language: xml
    code: |
      <Button style="@style/checker"
- title: Style the text of the Spinner
  menu:
  - title: Compound views are harder to style
    menu:
    - title: Spinner is a compound view
    - title: It actually consists of multiple views
    - title: Attributes on Spinner element have no effect on internal views
  - title: Changed by using a theme
    menu:
    - title: And definting a style with a predefined name
    - title: >
        Requires that the compound view in question has built in support for actually
        using a style with a specific name
- title: Style the text of the Spinner
  menu:
  - title: Create a style you want to apply, use any name
    language: xml
    code: |
      <style name="my_spinner">
        <item name="android:gravity">center</item>
        <item name="android:textSize">40sp</item>
      </style>
  - title: >
      Define this style for android:spinnerItemStyle in your theme
    language: xml
    code: |
      <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <item name="android:spinnerItemStyle">@style/my_spinner</item>
      </style>
- title: Advanced styling using xml resource files
  menu:
  - title: When the styling attributes are not enough
  - title: Some extra features can be done with resource XML files
    menu:
    - title: Rounded corners
    - title: Gradient colors
    - title: Different styling for different states - buttons
  - title: Drawables
    menu:
    - title: Generic term for different types of backgrounds
- title: Shape drawables
  menu:
  - title: Use for rounded corners
  - title: Use for gradient backgrounds
  - title: Add xml resource file with shape as root element
  - title: /res/drawable/example.xml
    language: xml
    code: |
      <shape xmlns:android="http://schemas.android.com/apk/res/android">
        <corners android:radius="2dp" />
        <gradient android:startColor="#ee8888" android:endColor="#dd3333"
          android:type="linear" android:angle="270" />
      </shape>
  - title: Reference the drawable as android:background in your View
- title: Selector
  menu:
  - title: A single drawable consisting of multiple drawables
    menu:
    - title: State of view determines which of the multiple drawables are used
  - title: Button changes in different states
    language: xml
    code: |
      <selector xmlns:android="http://schemas.android.com/apk/res/android">
        <item android:state_pressed="true"
          android:drawable="#333333" />
        <item android:state_focused="true"
          android:drawable="#333399" />
        <item
          android:drawable="#8888ff" />
      </selector>
- title: Good design
  menu:
  - title: Create beautiful user interfaces that are easy to understand and use
    menu:
    - title: Use inspiration and visual design from all platforms, including web
    - title: Don't be too inventive so users are confused
  - title: Follow the Android design guidelines and user interface patterns
    menu:
    - title: http://developer.android.com/design/index.html
  - title: Learn from the source
    menu:
    - title: http://androiddrawables.com
    - title: https://github.com/android/platform_frameworks_base/tree/master/core/res/res
- title: Design inspiration
  menu:
  - title: http://androidpttrns.com/
  - title: http://www.android-app-patterns.com/
  - title: http://dribbble.com/tags/android
  - title: http://mycolorscreen.com/?os=android
  - title: http://www.droidscreens.com/
  - title: http://androiduiux.com/
  - title: http://androidniceties.tumblr.com/
