title: iOS Peek
description: >
  A short overview of how to do similar things on the iOS platform.
menu:
- title: Lecture Presentation
  heading: iOS Peek
  type: deck
  shortname: lecture
  description: >
    Slides displayed in the browser. Choose "print" link for a printer-friendly
    page with all slides after one another.
  menu:
  - title: Content
    menu:
    - iOS Development
    - iOS SDK and Xcode
    - Single View Application
  - title: Platforms and technologies
    menu:
    - title: Supported operating systems for development
      menu:
      - title: "Android: Supported on Windows, Mac OS X and Linux"
      - title: "iOS: Supported only on Mac OS X"
    - title: Development environment
      menu:
      - title: "Android: Eclipse is free and open source (other alternatives exist)"
      - title: "iOS: Xcode is free in the Mac App Store"
    - title: Language
      menu:
      - title: "Android: Java, strongly typed, descendant of the C language"
      - title: "iOS: Objective-C, more loosely typed, compatible with the C language"
  - title: Distribution
    menu:
    - title: Stores
      menu:
      - title: "Android: Google Play Store, Amazon App Store and more"
      - title: "iOS: iTunes App Store"
    - title: Submitting your own apps to the store
      menu:
      - title: "Android: Apps are available as soon as you upload it (some malicious code screening)"
      - title: "iOS: Apps are checked by Apple employees and must conform to standards, 1-2 weeks"
    - title: Getting apps onto devices without the store
      menu:
      - title: "Android: Any app can be downloaded and installed over internet (Untrusted sources must be turned on)"
      - title: "iOS: An app can be downloaded and installed if device id is known and registered when building app, limit of 100 devices"
  - title: Developer Support
    menu:
    - title: Registration
      menu:
      - title: "Android: Google Play Store $25 one time fee"
      - title: "iOS: iOS Developer Program Membership $99 per year"
    - title: Income
      menu:
      - title: Both stores give 70% to the developer when selling apps
  - title: iOS SDK
    menu:
    - title: Xcode and the iOS SDK is contained in the same package when installing from Mac App Store
    - title: Core Foundation
      menu:
      - title: C language
      - title: Low level memory structures
    - title: Cocoa Touch, UIKit
      menu:
      - title: Objective-C language
      - title: User interface widgets/views
  - title: Almost identical between Objective-C and Java
    menu:
    - title: Both originates from the C language
    - title: Blocks of code inside curly braces { and }
    - title: Statements finished with semicolon ;
    - title: Variables, declarations, assignments etc
    - title: Selective statements like if, if-else, comparisions etc
    - title: Iterative statements like for and while
  - title: Differences between Objective-C and Java
    menu:
    - title: How classes/code are put in files
      menu:
      - title: Java forces one class for each file. One single file for each class.
      - title: >
          Objective-C follows C in separating the class declaration and implementation
          into two different files. Convention to have one pair of file for each class
          but not enforced by the language.
    - title: Strictness in objects and methods
      menu:
      - title: >
          Java is very strict. In order to call a method it must be known by compiler
          from the class definition.
      - title: >
          Objective-C is more loosely typed. Can write code where a method is called,
          without knowing for sure if it will be there when the code runs. Methods
          can be added dynamically while the application is running.
  - title: Objective-C syntax characters
    menu:
    - title: Special keywords start with @
      description: >
        @interface
    - title: Class members
      menu:
      - title: Instance method members start with -
      - title: Class (static) method members start with +
    - title: Statements in Objective-C are put inside [ and ]
      description: >
        This is the main features that makes Objective-C code backwards compatible with C.
        Everything inside of [ and ] are Objective-C statements and most other statements
        are valid C code.
  - title: String concatenation
    menu:
    - title: Objective-C
      language: objc
      code: |
        NSString* firstname = @"Adam";
        NSString* lastname = @"Ant";
        NSString* name = [[firstname stringByAppendingString:@" "] stringByAppendingString:lastname];
        int age = 25;
        NSString* text = [NSString stringWithFormat:@"My name is %@ %@ and I'm %d years old",
          firstname, lastname, age];
    - title: Java
      language: java
      code: |
        String firstname = "Adam";
        String lastname = "Ant";
        String name = firstname + " " + lastname;
        int age = 25;
        String text = String.format("My name is %s %s and I'm %d years old",
          firstname, lastname, age);
  - title: String and integer conversion
    menu:
    - title: Objective-C
      language: objc
      code: |
        int number = 123;
        NSString* str = [NSString stringWithFormat:@"%d", number];
        NSString* numstr = @"123";
        int num = [numstr intValue];
    - title: Java
      language: java
      code: |
        int number = 123;
        String str = Integer.toString(number);
        String numstr = "123";
        int num = Integer.parseInt(numstr);
  - title: Class with members
    menu:
    - title: Objective-C
      language: objc
      code: |
        @interface MyClass : NSObject {
          int _value;
        }
        -(void)increase;
        @end

        @implementation MyClass
        -(void)increase {
          _value++;
        }
        @end
    - title: Java
      language: java
      code: |
        public class MyClass extends Object {
          public int _value;
          public void increase() {
            _value++;
          }
        }
  - title: Building a user interface
  - title: Connecting to visual elements
  - title: Events
  - title: Some common events
    menu:
    - title: UIButton, Touch Up Inside
    - title: Slider, Value Changed
  - title: Store data in memory
  - title: Store data persistantly
  - title: Popup message
  - title: Additional screens
  - title: Launching other applications
  - title: Image resources


