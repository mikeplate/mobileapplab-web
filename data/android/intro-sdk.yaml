title: Overview of the Android Development Environment
description: >
  Overview of the tools and technologies for building native Android applications.
menu:
- title: Goals
  menu:
  - Know about the essential tools in the Android SDK
  - Get familiar with Android Studio
  - Create and start a virtual Android phone using the Emulator
- title: Android SDK
  menu:
  - title: Contains tools and files necessary to build Android applications
  - title: Possible to build applications with only the SDK and its command line tools
  - title: Recommended to use an IDE (Integrated Development Environment)
  - title: Eclipse previously
  - title: Android Studio going forward
  - title: Many, if not all, tools require Java to run
- title: Android SDK Manager
  menu:
  - title: Tool in the SDK to download and update parts of the SDK
    menu:
    - title: Menu command in Eclipse under Window menu
    - title: Run "android sdk" from the command line inside the tools directory of the SDK
    - title: On Windows, you can also start "SDK Manager.exe"
  - title: Find and update any new versions
  - title: Add specific versions of the Android platform
  - title: Add tools and libraries not installed by default
- title: Android Virtual Device Manager
  menu:
  - title: Tool in the SDK to create virtual devices and then launch them inside the Android Emulator
    menu:
    - title: Menu command in Eclipse under Window menu
    - title: Run "android avd" from the command line inside the tools directory of the SDK
    - title: On Windows, you can also start "AVD Manager.exe"
  - title: Create new virtual devices
    menu:
    - title: Choose an Android version for the phone
    - title: Choose an image (ARM or possibly x86 emulation)
    - title: Choose memory and other hardware features (emulated)
  - title: Start a virtual device in the Android Emulator
- title: Android Emulator
  menu:
  - title: Very close to a real device
    menu:
    - title: Slow to start. Ok to use (hopefully). Keep it opened.
    - title: Specify "Hardware keyboard" to type using your computer keyboard
    - title: Physical buttons on a physical device will be extra buttons in the Android Emulator window
  - title: Can be scaled/resized when running on computers with smaller screens
  - title: Each running emulator has a local tcp port number for control/communication
    menu:
    - title: adb is a command line tool to communicate with the emulator
    - title: Multiple running emulators can "call" each other using the port number
- title: Eclipse
  menu:
  - title: Open source IDE written in Java for developing all kinds of applications, not just Android apps
    description: >
      Most used for Java development, but also supports (via plugins and custom builds) C, C++,
      HTML, JavaScript and more.
  - title: Download from http://eclipse.org
    description: >
      Different downloads just differs in what default plugins are included. Use "for Java development"
      when building Android applications, or download the package from the Android site since it nowadays
      also includes Eclipse (but maybe not the latest version).
  - title: Customizable
    description: >
      Eclipse is very customizable and competent with a lot of features you might find in other IDEs like
      Microsoft Visual Studio. It does depend a lot of local settings and files created during its use that
      may be corrupted or introduce errors in the environment. Restart Eclipse or even remove the .metadata
      folder in your Workspace to "reset" the environment if strange errors occur.
- title: Android Plugin for Eclipse
  menu:
  - title: The ADT (Android Developer Tools) for Eclipse are essential to develop Android apps inside Eclipse
  - title: Included and installed when downloading the Android SDK
  - title: Manual install
    menu:
    - title: If you want the latest version of Eclipse, first download and run Eclipse
    - title: Choose "Help, Install New Software"
    - title: Click Add button to add a new plugin listing (called Repository)
    - title: Set name to whatever you like, for instance "Android"
    - title: Set url to http://dl-ssl.google.com/android/eclipse/
    - title: Click Ok, and then select the Developer Tools with a checkbox and continue with Next until Finish
- title: Tell Eclipse where Android SDK is
  menu:
  - title: After installing the Android Plugin (ADT), restart Eclipse
  - title: Tell Eclipse where the Android SDK is on disk
    menu:
    - title: Eclipse will ask for this location when restarting the first time after the ADT has been installed
    - title: Can also be set/changed inside Eclipse
    - title: Choose "Window, Preferences, Android" and specify "SDK Location"
    - title: The list below "SDK Location" in this dialog box should contain all downloaded Android versions
    - title: >
        This setting is stored as part of your Workspace, so changing to an empty Workspace means this
        might need to be specified again.
- title: Eclipse basics
  menu:
  - title: Workspace
    description: >
      A folder on disk that contains multiple projects in separate subfolders and has a ".metadata"
      folder where Eclipse-settings are stored and remembered between Eclipse sessions.
  - title: Project / Package
    description: >
      A package in Java is a collection of one or more classes with the same package name (the name that
      looks like a reversed domain name). Usually the same as a project, even though a project can also
      link to other packages/libraries.
  - title: Perspective
    description: >
      The contents of the Eclipse window. Different perspectives are optimized for different stages
      during development like a "Java" perspective while writing code and a "Debug" perspective when
      running and finding bugs.
  - title: View
    description: >
      Part of a perspective, a visual rectangular area/panel in the perspective. Can be organized next
      to each other or as tabs on top of each other in single area
- title: Eclipse keyboard shortcuts while editing code
  menu:
  - title: Ctrl+1
    description: >
      Quick fix. Display menu with options to fix/add/change problems in the code.
  - title: Ctrl+Space
    description: >
      Show list of possible choices at current position in the code. Like Intellisense in Microsoft
      Visual Studio.
  - title: Ctrl+O
    description: >
      Navigate inside of current file. Show list of class members (functions). Move with arrows and
      go to selected member with Enter.
  - title: Ctrl+E
    description: >
      Navigate between opened files. Show list of all opened files (windows). Move with arrows and
      show selected file with Enter.
  - title: Ctrl+W
    description: >
      Close the current file/window.
- title: Building and running in Eclipse
  menu:
  - title: Eclipse is set to build automatically while you are writing code
  - title: Any build errors are shown continuously in the "Problems" view
    description: >
      Note that some errors are just an effect of you not being completely finished with your code
  - title: Debug
    menu:
    - title: You seldom just "Run" your code, usually you "Debug" while running to any errors are caught
    - title: Keyboard shortcut F11
    - title: >
        First time, to get Eclipse to recognize running it as an Android app, right click on the project
        and select "Debug As, Android Application"
    - title: Let Eclipse automatically switch to the Debug Perspective while running and debugging
      menu:
      - title: Switch back when you're done with the "Java" button in the top right corner
    - title: Keep emulator running for faster start on next Debug
- title: Get out of an Eclipse jam
  menu:
  - title: Eclipse can sometimes give unexplainable errors
  - title: Have you tried turning it off and on again?
    menu:
    - title: Choose "File, Restart"
  - title: Clean build
    menu:
    - title: Choose "Project, Clean" and choose all or the current project
    - title: If it claims that an R.id constant doesn't exist, when it does
    - title: When building errors doesn't make sense or can't be explained
  - title: Reset perspective
    menu:
    - title: Choose "Window, Reset Perspective"
    - title: If the user interface is behaving strange, panels missing
    - title: If it is complaining that a file doesn't exist, that is clearly there
- title: More Eclipse tips
  menu:
  - title: Opened files can come from more than one project
    description: >
      Common to work in more than one project and open multiple files. Since many files in Android have
      the same name across projects, it is quite easy to work on a file in another project than what
      you THINK you are working on.
  - title: Location of Android SDK
    description: >
      If Eclipse have trouble finding the Android SDK, check it under "Window, Preferences, Android, 
      SDK Location". The list below the path must have at least one Android platform version.
- title: Errors while running your app
  menu:
  - title: Run-time errors are called Exceptions
    menu:
    - title: An Exception is thrown by the platform when a run-time error is discovered
  - title: When an Exception occurs
    menu:
    - title: Eclipse will halt at location where exception was thrown
    - title: Eclipse switches to Debug Perspective
      description: >
        Unfortunately not always showing the location in your own code where the error is (depending on what
        kind of exception has occured). Look at least at the type of exception and any additional information
        in the Variables panel of the Debug perspective.
  - title: Set your own breakpoint (stop) by double-click in left margin before code line
- title: Common errors
  menu:
  - title: Syntax errors in layout xml file
    description: >
      Typing wrong element or attribute names in the xml file is common and are usually not discovered
      until starting your application. Note that most names are case sensitive. Also note that most
      attributes is prefixed with "android:". The exception thrown is seldom helpful.
  - title: Wrong onClick method
    description: >
      If the value of the "android:onClick" attribute does not match the method in your Java class, this is
      not discovered until the application runs. The name much match exactly, including case, but the method
      must also be "public void" and take a View as its single argument.
  - title: Forgetting to request a permission
    description: >
      Some operations like performing a network request requires a permission to be specified in your
      AndroidManifest.xml file. Without it, an exception will be thrown the first time network communication
      is attempted.
  - title: Forgetting to declare extra Activities
    description: >
      If your app has more than one Activity, it is common to forget that besides creating a layout xml
      and an Java source code file you also need to declare it in AndroidManifest.xml.
- title: Debugging commands and keyboard shortcuts
  menu:
  - title: Step through line-by-line
    menu:
    - title: F5 - Step Into, will show/step inside of your own methods
    - title: F6 - Step Over, will NOT how/step inside of your own methods
    - title: F8 - Resume, run full speed until next breakpoint, end or an exception occurs
- title: Faster Android Emulator
  menu:
  - title: Android Emulator is slow
    menu:
    - title: >
        Because it is as close to a physical device as is possible. A full compile of the Android platform
        for ARM processors. Since it needs to emulate the ARM processor, it will always be slow.
    - title: >
        Not always a bad thing. The advantage is that the speed of emulator will not fool you with regards
        to how fast your code will run on physical devices.
  - title: Use a x86 image instead
    menu:
    - title: A full compile of the Android platform, but for Intel x86 processors
    - title: This will be faster since it means that no ARM processor emulation is necessary
    - title: Requires installation of "Intel x86 Emulator Accelerator (HAXM)"
      description: >
        Install it from the Android SDK Manager (under Extras). Requires administrative access on your
        computer.
    - title: Then install "Intel x86 Atom System Image" for the Android version
    - title: And create a virtual device that uses the "Interl x86..." image instead
- title: Logging
  menu:
  - title: Console View in Eclipse
    description: >
      This view shows commands that Eclipse runs when building, debugging etc. The source of these messages
      is usually Eclipse or some other tool in the SDK. Make sure to select the Android view (not DDMS).
  - title: LogCat View in Eclipse
    description: >
      This view shows messages from the running Android Emulator or a physical device (if connected).
      These messages will be quite verbose, but can filtered to only show errors.
  - title: Output your own LogCat messages
    description: >
      You can also output your own messages to the LogCat View using Log.i, Log.w and Log.e calls from
      your Java code (corresponding to Information, Warning and Error log levels of importance).
- title: DDMS (Dalvik Debug Monitor Server)
  menu:
  - title: Communicates with a running Emulator or actual Phone/Device
  - title: Take screenshots from the device
  - title: Transfer files to/from the device
  - title: Show logs and debugging messages
  - title: Show status information about processes
  - title: Show network usage
