title: Resources Presentation
heading: Resources
type: deck
description: >
  Slides about creating and using resources files and their qualifiers.
  Choose "print" link for a printer-friendly page with all slides after one another.
menu:
- title: Goals
  menu:
  - title: Know how to create resources of different types
  - title: Know how to define style values and styling collections in XML resource files
  - title: Know how resources are selected by qualifiers
- title: Drawables
  menu:
  - title: Drawables are an abstraction in Android for handling backgrounds, images and other "drawable" things
    menu:
    - title: Images files like png, jpg
    - title: A single solid color
    - title: Gradient colors - smooth transition from one color into another
    - title: 9-patch images - special image file that have both non-stretchable and stretchable parts
  - title: Used primarily as background for a View
  - title: Specified in resource folder "res/drawable"
    menu:
    - title: Binary files like png and jpg images
    - title: XML files that can be converted into objects like ShapeDrawable
- title: Bitmap drawables
  menu:
  - title: Just drag and drop image files onto the drawable folder in project tree
    menu:
    - title: Default project might not have the generic "drawable" folder
    - title: Create the "drawable" folder under "res" for putting generic images and other resources
  - title: File name must comply with Java naming rules
    description: >
      Keep it to a-z, 0-9 and underscores
  - title: File name is also the resource identifier
  - title: /res/drawable/background.jpg
    language: xml
    code: |
      <ImageView android:src="@drawable/background"
- title: Shape drawables as xml resource file
  menu:
  - title: Use for rounded corners
  - title: Use for gradient backgrounds
  - title: Add xml resource file with shape as root element
  - title: /res/drawable/example.xml
    language: xml
    code: |
      <shape xmlns:android="http://schemas.android.com/apk/res/android">
        <corners android:radius="2dp" />
        <gradient android:startColor="#ee8888" android:endColor="#dd3333"
          android:type="linear" android:angle="270" />
      </shape>
  - title: Reference the drawable as android:background in your View
- title: Styling values in a central place
  menu:
  - title: Apply a single styling value for many Views in many Activities
    menu:
    - title: Color
    - title: Measurement (like textSize, padding)
    - title: Kind of a style "variable"
  - title: Defined in a XML resource file like /res/values/variables.xml
    language: xml
    code: |
      <resources>
        <color name="dark">#339933</color>
        <dimen name="heading">20sp</dimen>
      </resources>
  - title: Reference in any View attribute that can hold that particular value
    language: xml
    code: |
      <TextView android:textColor="@color/dark"
        android:textSize="@dimen/heading"
- title: Collect multiple styling attributes into a single style
  menu:
  - title: Defined in a XML resource file like /res/values/styles.xml
    language: xml
    code: |
      <resources>
        <style name="checker">
          <item name="android:background">#333399</item>
          <item name="android:layout_margin">5dp</item>
        </style>
      </resources>
  - title: Referenced in any View as a single attribute (NOT android prefix!)
    language: xml
    code: |
      <Button style="@style/checker"
- title: Resource Qualifiers
  menu:
  - title: A qualifier is a condition that can be used to determine which specific resource file to use
  - title: Qualified resource files have the same file name, but are put in different folders
  - title: The folder determines the qualifier, what to check and what value to trigger the particular file
  - title: The folder names is usually enough to realize what the qualifier is
    menu:
    - title: -land for landscape orientation
    - title: -sv for Swedish language
  - title: Development environment will help in choosing and specifying qualifiers
- title: Qualifier use cases
  menu:
  - title: Landscape/Portrait orientation of device
    description: >
      Specify a different layout for landscape orientation, taking into the account that there is more
      space horizontally than vertically.
  - title: Language of device
    description: >
      Usually only used for texts in the user interface, even though you could use it for other resources too.
  - title: Tablet devices (screen size/resolution)
      Specify a different layout when there is more display space on the device, like on 7 or 10 inch
      tablet compared to a phone.
- title: Strings and language support
  menu:
  - title: If you have any ambition to translate your application into more than one language
    menu:
    - title: Make sure NO string literals for user interface text is stored in Java
    - title: All user interface text i xml attributes should also be string resources
  - title: Stored as resource xml files in /res/values/strings.xml
    language: xml
    code: |
      <resources>
        <string name="msg">Welcome to this application!</string>
  - title: Reference in layout xml files
    language: xml
    code: |
      <TextView android:text="@string/msg" />
  - title: Reference in Java
    language: java
    code: |
      _textView.setText(R.string.msg);
- title: More information
  menu:
  - title: Book references

