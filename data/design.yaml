title: Design
description: >
  Creating visual interfaces and user experiences optimized for mobile
menu:
- title: Lecture Presentation
  heading: 2. Design
  type: deck
  shortname: lecture
  description: >
    Slides displayed in the browser. Choose "print" link for a printer-friendly
    page with all slides after one another.
  menu:
  - title: Content
    menu:
    - Useful CSS3 styles
    - Image optimizations suitable for mobile
    - Media queries
  - title: CSS basics
    menu:
    - title: Styling of html elements
      description: 
    - title: Definition of a CSS class
      language: css
      code: |
        .headline {
          color: #ff0;
          background-color: #a0663e;
        }
    - title: Applying a CSS class using a selector
      language: html
      code: |
        <div class="headline">
            Text
        </div>
  - title: CSS basics - stylesheets
    menu:
    - title: Stylesheet is a collection of classes
    - title: Stylesheet as an element in the html file
      language: html
      code: |
        <style>
          .headline { }
        </style>
    - title: Stylesheet as a separate file
      language: html
      code: |
        <link rel="stylesheet" href="filename.css" />
  - title: Browser vendor prefixes
    menu:
    - title: CSS3 still developing
      description: >
        Browser vendors often (but not always) implement new styles using their own prefixes.
        After some time, when the standard at W3C has stabilized, they may also choose to remove
        it and implement the style without a prefix.
    - title: Webkit
      description: >
        Both iOS and Android being based on Webkit, uses the prefix "-webkit" in those cases
    - title: Best strategy to implement all known prefixes
      description: >
        -webkit, -moz (Firefox), -ms (Internet Explorer), -o (Opera)
  - title: Some CSS3 styles
    menu:
    - title: Rounded corners with border-radius
      language: css
      code: "border-radius: 5px;"
    - title: Shadow behind an element - horz, vert, blur, color
      language: css
      code: |
        box-shadow: 2px 2px 4px #000;
        text-shadow: 2px 2px 4px #000;
  - title: CSS3 Gradients
    menu:
    - title: Smooth transition of colors, from one to another (or even many)
    - title: Only applicable as an image
      description: Can be specified anywhere where an image url is valid as a style property value
    - title: More than one syntax
      description: Older Android browsers does not support newer syntax
    - title: Vertical gradient between two colors
      language: css
      code: |
        -webkit-linear-gradient(left, #339, #993);
    - title: Specify more colors and their relative position within the gradient
      language: css
      code: |
        -webkit-linear-gradient(left, #339 25%, #fff 50%, #993 100%);
  - title: Box sizing
  - title: Element distribution with flexbox
  - title: Things to consider about images on mobile networks
    menu:
    - title: Image loading is subject to latency
      description: >
        A request to a web server is more expensive on mobile networks than on wired. Latency is the time
        to the receive the first byte after sending a request.
    - title: Image size, larger images takes longer to download
      description: >
        Not as bad as latency, but mobile networks are slower than wired
    - title: Minimizing the number of requests for images
      menu:
      - CSS3 images 
      - Inline images
      - Sprite images
  - title: Create graphics on the web without using image files
    menu:
    - title: Why?
      menu:
      - Speed. No latency trying to fetch separate image files.
      - Simplicity. Easy to create and modify. No need to start up your image editing application.
      - Note that we are talking about very simple graphics to enhance the visual design, like squares and circles in single/few colors.
    - title: Techniques
      menu:
      - Unicode characters
      - CSS styles
      - CSS gradients
      - SVG (Scalable Vector Graphics), not supported on Android before 3.0
      - Canvas, requires JavaScript
  - title: CSS3 images
    menu:
    - title: Use CSS3 features to specify an image and not download anything at all
      description:
        CSS3 gradients without gradient, to create images of single or multiple colors that always span
        the whole width or height of the images size.
    - title: Image with horizontal "ribs"
      language: css
      code: "background-image: -webkit-linear-gradient(top, #339 0%, #339 50%, #fff 50%, #fff 100%);"
  - title: Create ordinary/complex graphics and images without using individual image files
    menu:
    - title: Why?
      menu:
      - Speed. No latency trying to fetch separate image files.
      - Note that depending on the circumstances, this might mean it is more difficult to produce the image data
    - title: Techniques
      menu:
      - Inline images
      - Sprite images
  - title: Inline images
  - title: Sprite images
  - title: CSS3 media queries
    menu:
    - title: Maybe "media" is a bit misleading
      description: >
        It is all about specifying different stylesheets or classes depending on the value of the
        screen such as width or orientation.
  - title: Finding inspiration
    menu:
    - title: Design inspiration
      menu:
      - http://www.dribble.com/tags/mobile
- title: Exercises
  description: Practical tasks to perform and ensure that the basis of the chapter has been understood.
  menu:
  - title: Assignment 1 (mandatory)
    menu:
    - title: Create a mobie optimized web page
      description: >
        Create an html file with some made up content. It should have both text and images. It must use at
        least one media query with different css styles depending on the width of the browser window.
        It must also use at least five (5) css styles to change the appearance of the content.
  - title: Assignment 2 (optional)
    menu:
    - title: Optimized images for fewer requests
      description: >
        Create an html file with at least four (4) images. The images themselv can be any image you
        like.  Create them yourself or just save some free images from the net. One of the images
        should be encoded in base64 and inserted as an inline image in the web page. Merge the other
        three images into a single image file, but insert each and one of the images in the web page
        in different location using image sprites.
  - title: Assignment 3 (optional)
    menu:
    - title: Implement a design
      description: >
        Look at this design. Then try to implement the design in a web page using as much html (with text)
        and css to repeat the look.
- title: Width strategy
  type: demo
  shortname: width
  description: >
    Some simple strategies to set a suitable width for both mobile and desktop using css. The goal
    is to have mobile pages always fill the full width of the screen, but have a maximum width for
    desktop where maximized browser windows today can be extremely wide.
- title: Unicode characters
  type: demo
  shortname: unicode
  description: >
    Some Unicode characters that can be used instead of images.
- title: CSS images
  type: demo
  shortname: css-images
  description: >
    Examples of how to use css styling to create simple graphics like bullets to enhance the web
    page.
- title: Gradients example
  type: demo
  description: >
- title: Inline images example
  type: demo
  description: >
- title: Image sprite example
  type: demo
  description: >
- title: Media queries for portrait/landscape
  type: demo
  description: >
    Give the user a full screen exprience in landscape, but keep extra commands etc i portrait.
